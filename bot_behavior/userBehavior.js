import bookElement from "../components/bookElement.js";
import genres from "../components/genres.js";
import getActiveAdmin from "../components/getActiveAdmin.js";
import overwrite from "../components/overwrite.js";
import userDeff from "../components/userDeff.js";
import bot from "../index.js";
import Book from "../models/Book.js";
import User from "../models/User.js";
import getUser from "../scripts/getUser.js";
let userWork = {};
let userCods = {};
async function userBehavior(msg, text, userId, chatId) {
	//–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
	console.log(text);
	bot.setMyCommands([
		{ command: "/start", description: "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º" },
	]);
	if (userWork[userId]) {
		if (userWork[userId] === 1) {
			console.log(text);

			const catalogToGenre = await Book.find(
				text === "–í—Å–µ –∂–∞–Ω—Ä—ã" ? {} : { genre: text }
			);
			const userHave = (await User.findOne({ userId: userId })).book;

			console.log(userHave);
			if (catalogToGenre.length) {
				for (let g = 0; g < catalogToGenre.length; g++) {
					const element = catalogToGenre[g];
					await bookElement(userId, element, {
						reply_markup: {
							inline_keyboard: [
								[
									{
										text: userHave
											? "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–Ω–∏–≥–∞üòä"
											: element.status === "–î–û–ú–ê"
											? `–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å${element.exlusive ? "(–≠–∫—Å–ª—é–∑–∏–≤)" : ""}`
											: "–í –æ–±—Ä–∞—â–µ–Ω–∏–∏üòî",
										callback_data:
											!userHave && element.status === "–î–û–ú–ê"
												? `reserved(${element.id}|${userId}${
														element.exlusive ? "|ex" : "|st"
												  })`
												: "d",
									},
								],
							],
						},
					});
				}
			} else {
				await bot.sendMessage(
					userId,
					"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–Ω–∏–≥ –ø–æ –¥–∞–Ω–Ω–æ–º—É –∂–∞–Ω—Ä—É –µ—â–µ –Ω–µ—Ç:("
				);
			}
			delete userWork[userId];
			userDeff(userId, "–ß—Ç–æ-—Ç–æ –µ—â–µ?");
		} else if (userWork[userId] === 2) {
			const userServer = await User.findOne({ userId: userId });
			const book = await Book.findById(userServer.book);
			switch (text) {
				case "–û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ":
					// console.log(userServer, book);
					if (await overwrite(book, userServer)) {
						userDeff(userId, "–ì–æ—Ç–æ–≤–æ");
					} else {
						userDeff(userId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞");
					}
					delete userWork[userId];
					break;
				case "–ü–æ–ª—É—á–∏—Ç—å –∫–∏–Ω–≥—É(–ù–∞–∂–∏–º–∞—Ç—å —Å—Ç—Ä–æ–≥–æ –Ω–∞ –ø—É–Ω–∫—Ç–µ –≤—ã–¥–∞—á–∏!)":
					userCods[userId] = Math.round(Math.random() * 100000);

					bot.sendMessage(
						userId,
						`–ü—Ä–æ—á—Ç–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –∞–¥–º–∏–Ω—Å—Ç—Ä–∞—Ç–æ—Ä—É,${
							book.exlusive ? "–ò –ø–µ—Ä–µ–¥–∞–π—Ç–µ 50 —Ä—É–±–ª–µ–π " : ""
						} —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–Ω–∏–≥—É ${userCods[userId]}`
					);
					bot.sendMessage(
						await getActiveAdmin(),
						`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –∑–∞–±—Ä–∞—Ç—å –∫–Ω–∏–≥—É,'${
							book.name
						}', –µ—Å–ª–∏ –ø—Ä–æ—á—Ç–µ–Ω–Ω—ã–π –∏–º –∫–æ–¥ —Å–æ–≤–ø–∞–¥–µ—Ç —Å –≤–∞—à–∏–º${
							book.exlusive ? ", –∏ –æ–Ω –ø–µ—Ä–µ–¥–∞–ª –≤–∞–º 50 —Ä—É–±–ª–µ–π," : ""
						} —Ç–æ –≤—ã–¥–∞–π—Ç–µ –µ–º—É –∫–Ω–∏–≥—É –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É
						${userCods[userId]}`,
						{
							reply_markup: {
								inline_keyboard: [
									[
										{
											text: "–°–Æ–î–´",
											callback_data: `recoil(${book.id}|${userId})`,
										},
									],
								],
							},
						}
					);
					delete userWork[userId];

					break;
			}
		}
	} else {
		switch (text) {
			case "/start":
				await bot.sendPhoto(
					chatId,
					"https://i.ibb.co/tKd9LRs/photo-2023-06-01-20-16-47.jpg"
				);
				await userDeff(
					userId,
					"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –±–æ—Ç –¥–ª—è –æ–±–º–µ–Ω–∞ –∫–Ω–∏–∂–∫–∞–º–∏!"
				);
				if (!(await User.findOne({ userId }))) {
					const user = new User({ userId, userName: msg.from.username });
					console.log(await user.save());
				}

				break;
			case "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥":
				userWork[userId] = 1;
				genres(userId, "–•–æ—Ä–æ—à–æ, –≤–≤–µ–¥–∏ –∂–∞–Ω—Ä—ã –ø–æ –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –∫–Ω–∏–≥–∏", [
					[{ text: "–í—Å–µ –∂–∞–Ω—Ä—ã" }],
				]);
				break;
			case "–ú—ã –Ω–∞ –∫–∞—Ä—Ç–µ":
				userDeff(userId, "https://yandex.ru/maps/-/CCUwjYAC8D");
				break;
			case "–û –Ω–∞—à–µ–º –º–∞–ª–µ–Ω—å–∫–æ–º –ø—Ä–æ–µ–∫—Ç–µ":
				userDeff(
					userId,
					`üììüìå–ê–Ω—Ç–∏–∫–∞—Ñ–µ PROSTO —Å–æ–≤–º–µ—Å—Ç–Ω–æ —Å –ê—Ä–∏–Ω–æ–π –í–∞–π–Ω–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø–∏–∞–ª—å–Ω–æ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –ø–æ –æ–±–º–µ–Ω—É –∫–Ω–∏–≥–∞–º–∏ –≤ –≥. –ö–∞–Ω–∞—à! 

				üìñüìå–ë—É–∫–∫—Ä–æ—Å–∏–Ω–≥ –∫–∞–∫ —Å–ø–æ—Å–æ–± –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –º–µ–∂–¥—É –ª—é–¥—å–º–∏ –∏ –ø–æ–ø—ã—Ç–∫–∞ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—Ç—å —á–∏—Ç–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —É–∂–µ –¥–æ–≤–æ–ª—å–Ω–æ –¥–æ–ª–≥–æ–µ –≤—Ä–µ–º—è. –í —Ä–∞–º–∫–∞—Ö —ç—Ç–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è, –ª—é–¥–∏ –æ—Å—Ç–∞–≤–ª—è—é—Ç –∫–Ω–∏–≥–∏ –ø—Ä—è–º–æ –≤ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö –∏ –Ω–∞–±–ª—é–¥–∞—é—Ç –∑–∞ –∏—Ö —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ–º. –ö–∞–∑–∞–ª–æ—Å—å –±—ã, –∑–∞—á–µ–º –≤–æ–æ–±—â–µ –∑–∞–º–µ–Ω—è—Ç—å –µ–≥–æ —á–µ–º-—Ç–æ —Å—Ö–æ–∂–∏–º —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏? –û–¥–Ω–∞–∫–æ, —Å—Ç–æ–∏—Ç –≤—Å–ø–æ–º–Ω–∏—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é, –∑–Ω–∞–∫–æ–º—É—é –≤—Å–µ–º –∫–Ω–∏–≥–æ–ª—é–±–∞–º. –í–æ–æ–±—Ä–∞–∑–∏—Ç–µ, –≤—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ –∏ –≤–∏–¥–∏—Ç–µ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ –º–∞–Ω—è—â–∏–µ –æ–±–ª–æ–∂–∫–∏, —Ç—ã—Å—è—á–∏ –Ω–∞–∑–≤–∞–Ω–∏–π, —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—Ä–∏–π... –í–∑–≥–ª—è–¥ –Ω–µ—Ä–≤–Ω–æ –±–µ–≥–∞–µ—Ç –æ—Ç —Å—Ç–µ–ª–ª–∞–∂–∞ –∫ —Å—Ç–µ–ª–ª–∞–∂—É, –∏, –≤ –∫–∞–∫–æ–π-—Ç–æ –º–æ–º–µ–Ω—Ç, –≤—ã –ª–æ–≤–∏—Ç–µ —Å–µ–±—è –Ω–∞ —Ç–æ–º, —á—Ç–æ —Å–ø—É—Å–∫–∞–µ—Ç–µ –≤—Å–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –∫–Ω–∏–≥–∏, –ø–æ–ª–æ–≤–∏–Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ–≤–µ—Ä–≥–Ω–µ—Ç –≤–∞—Å –≤ —É–Ω—ã–Ω–∏–µ –∏ —Å–æ–∂–∞–ª–µ–Ω–∏–µ –æ—Ç –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å—Ä–µ–¥—Å—Ç–≤! –ó–Ω–∞–∫–æ–º–æ? –ù–∞—à –∂–µ –ø—Ä–æ–µ–∫—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∑—è—Ç—å –Ω–µ–±–∏–±–ª–∏–æ—Ç–µ—á–Ω—ã–µ –∏–∑–¥–∞–Ω–∏—è ‚Äú–Ω–∞–ø—Ä–æ–∫–∞—Ç‚Äù –∏ –æ—Ü–µ–Ω–∏—Ç—å –∏—Ö —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≤ —É—é—Ç–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–µ –∞–Ω—Ç–∏–∫–∞—Ñ–µ –∏–ª–∏ –∂–µ —É —Å–µ–±—è –¥–æ–º–∞, –∏ –ø–æ–Ω—è—Ç—å, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ —ç—Ç–∞ –∫–Ω–∏–≥–∞ –∏–º–µ–Ω–Ω–æ –≤–∞–º. 
				
				üì≤üìå–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç? –ú—ã —Å–æ–∑–¥–∞–ª–∏ –¢–ì-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç –∫–∞–∂–¥–æ–º—É –≤—ã–±—Ä–∞—Ç—å –∫–Ω–∏–∂–Ω—É—é –Ω–æ–≤–∏–Ω–∫—É –∏–ª–∏ —Ä–µ—Ç—Ä–æ-—ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä—è–º–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –æ–Ω–ª–∞–π–Ω, –∞ –∑–∞–±—Ä–∞—Ç—å –µ—ë –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∞–Ω—Ç–∏–∫–∞—Ñ–µ PROSTO, –∫–æ—Ç–æ—Ä–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: 
				–≥. –ö–∞–Ω–∞—à, –ì–æ—Ä–æ–¥—Å–∫–æ–π –ü–∞—Ä–∫ (–±—Ä—É—Å—á–∞—Ç–∫–∞ –≤–æ–∑–ª–µ —Å–∫–µ–π—Ç-–ø–ª–æ—â–∞–¥–∫–∏, –ª–µ–≤–∞—è —Ç—Ä–æ–ø–∞, –∫–∞—Ñ–µ ‚Äú‚Äù). –¢–∞–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∑–∞—Ç—Ä–∞—Ç –∏–∑—É—á–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –∏–∑–¥–∞–Ω–∏–µ –∏ –¥–æ—Å—Ç—É–ø–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –Ω–µ–º—É, –∞ —Ç–∞–∫–∂–µ —É–ø—Ä–æ—â–∞–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –º–µ–∂–¥—É –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∞–Ω—Ç–∏–∫–∞—Ñ–µ –∏ –µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏. –ö—Ä–æ–º–µ —Ç–æ–≥–æ, –±—É–∫–∫—Ä–æ—Å–∏–Ω–≥ - —ç—Ç–æ –µ—â—ë –∏ –æ—á–µ–Ω—å —ç–∫–æ–ª–æ–≥–∏—á–Ω–æ, –≤–µ–¥—å –ª—é–±–æ–π –∂–µ–ª–∞—é—â–∏–π –º–æ–∂–µ—Ç –æ—Å—Ç–∞–≤–∏—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–µ, –ø—Ä–∏–µ–≤—à–∏–µ—Å—è –∫–Ω–∏–≥–∏ —É –Ω–∞—Å, –≤–º–µ—Å—Ç–æ —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å –∏—Ö, –∏ –ø–æ–¥–∞—Ä–∏—Ç—å –¥—Ä—É–≥–∏–º –ª—é–¥—è–º –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è –æ—Ç –ø—Ä–æ—á—Ç–µ–Ω–∏—è! 
				
				üßæ–°—Å—ã–ª–∫–∞ –Ω–∞ –ë–æ—Ç -@prosto_books_bot
				
				–°—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤:
				
				üìï–ê—Ä–∏–Ω–∞ –í–∞–π–Ω–µ—Ä - https://t.me/rudeemodudelovesyoukid
				
				ü§ç–ê–Ω—Ç–∏–∫–∞—Ñ–µ PROSTO - https://t.me/anticafeprosto`
				);
				break;
			case "–Ø —Ö–æ—á—É –æ—Ç–¥–∞—Ç—å –∫–Ω–∏–≥—É":
				const userServ = await User.findOne({ userId });
				const userHave = userServ.book;
				if (userHave) {
					const book = await Book.findById(userServ.book);
					console.log(book);
					if (book.status === "–ö–õ–ò–ï–ù–¢") {
						userDeff(
							userId,
							"–ú—ã —É–≤–µ–¥–æ–º–∏–º –æ–± —ç—Ç–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –±—É–¥–µ–º –æ–∂–∏–¥–∞—Ç—å –≤–∞—Å –≤ —Ç–µ—á–µ–Ω–∏–∏ –≤—Å–µ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è"
						);
						bot.sendMessage(
							await getActiveAdmin(),
							`–î–æ—Ä–æ–≥–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n${
								msg.from.username
									? "c –Ω–∏–∫–æ–º @" + msg.from.username
									: "—Å id" + userId
							}\n—Ö–æ—á–µ—Ç –æ—Ç–¥–∞—Ç—å –∫–Ω–∏–≥—É '${
								book.name
							}', –∫–æ–≥–¥–∞ –∫–Ω–∏–≥–∞ –±—É–¥–µ—Ç —É –≤–∞—Å, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É –¥–ª—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏`,
							{
								reply_markup: {
									inline_keyboard: [
										[
											{
												text: "–°–Æ–î–´",
												callback_data: `return(${book.id}|${userId})`,
											},
										],
									],
								},
							}
						);
					} else {
						userDeff(
							userId,
							"–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–∏–≥–∞ –ø–æ–∫–∞ –Ω–µ —É –≤–∞—Å, –º—ã –æ–∂–∏–¥–∞–µ–º –≤–∞—Å –≤ –ø—É–Ω–∫—Ç–µ –≤—ã–¥–∞—á–∏"
						);
					}
				} else {
					userDeff(userId, "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–Ω–∏–≥–∏");
				}
				break;
			case "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–∏–≥–∞":
				const userServer = await User.findOne({ userId });
				const book = await Book.findById(userServer.book);
				console.log(book);
				if (userServer.book && book.status === "–ü–†–û–¶–ï–°–°") {
					bookElement(userId, book, {
						reply_markup: {
							keyboard: [
								[{ text: "–û—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ" }],
								[
									{
										text: "–ü–æ–ª—É—á–∏—Ç—å –∫–∏–Ω–≥—É(–ù–∞–∂–∏–º–∞—Ç—å —Å—Ç—Ä–æ–≥–æ –Ω–∞ –ø—É–Ω–∫—Ç–µ –≤—ã–¥–∞—á–∏!)",
									},
								],
							],
						},
					});
					userWork[userId] = 2;
				} else if (userServer.book && book.status === "–ö–õ–ò–ï–ù–¢") {
					userDeff(
						userId,
						"–ö–Ω–∏–≥–∞ —É–∂–µ —É –≤–∞—Å, –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —á—Ç–µ–Ω–∏–µ–º. –í —Å–ª—É—á–∞–µ –ø—Ä–æ—á—Ç–µ–Ω–∏—è –∫–Ω–∏–≥–∏ –∏ –∂–µ–ª–∞–Ω–∏—è –µ–µ –æ—Ç–¥–∞—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ '–Ø —Ö–æ—á—É –æ—Ç–¥–∞—Ç—å –∫–Ω–∏–≥—É'"
					);
				} else {
					userDeff(userId, "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–Ω–∏–≥–∏");
				}

				break;
			default:
				bot.sendMessage(userId, "–ù–µ –æ—á–µ–Ω—å –≤–∞—Å –ø–æ–Ω—è–ª, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É");
		}
	}
}

export default userBehavior;
